App.js:
import React, { useState } from 'react';
import './App.css';

function App() {
  const [loggedIn, setLoggedIn] = useState(false); // Track login state
  const [userType, setUserType] = useState(""); // "student" or "instructor"
  const [username, setUsername] = useState(""); // Username input
  const [password, setPassword] = useState(""); // Password input
  const [courses, setCourses] = useState([]); // List of courses
  const [newCourse, setNewCourse] = useState(""); // For adding new course
  const [forumComments, setForumComments] = useState([]); // Comments in the discussion forum
  const [newComment, setNewComment] = useState(""); // For adding new comments

  // Function to handle login
  const handleLogin = () => {
    if (username && password && (userType === "student" || userType === "instructor")) {
      setLoggedIn(true);
    }
  };

  // Function to handle logout
  const handleLogout = () => {
    setLoggedIn(false);
    setUserType("");
    setUsername("");
    setPassword("");
  };

  // Function to add a new course (Instructor only)
  const addCourse = () => {
    if (userType === "instructor" && newCourse) {
      setCourses([...courses, newCourse]);
      setNewCourse("");
    }
  };

  // Function to add a new comment
  const addComment = () => {
    if (newComment) {
      setForumComments([...forumComments, { user: username, text: newComment }]);
      setNewComment("");
    }
  };

  return (
    <div id="app">
      {!loggedIn ? (
        <div className="login-section">
          <h2>Login</h2>
          <input
            type="text"
            placeholder="Username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
          />
          <input
            type="password"
            placeholder="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          <select value={userType} onChange={(e) => setUserType(e.target.value)}>
            <option value="">Select Role</option>
            <option value="student">Student</option>
            <option value="instructor">Instructor</option>
          </select>
          <button onClick={handleLogin}>Login</button>
        </div>
      ) : (
        <div className="main-section">
          <button onClick={handleLogout} className="logout-button">Log Out</button>
          <h2>Welcome, {userType === "instructor" ? "Instructor" : "Student"} {username}</h2>
          
          <div className="course-section">
            <h3>Courses</h3>
            {userType === "instructor" && (
              <>
                <input
                  type="text"
                  placeholder="New Course"
                  value={newCourse}
                  onChange={(e) => setNewCourse(e.target.value)}
                />
                <button onClick={addCourse}>Add Course</button>
              </>
            )}
            <div className="course-list">
              {courses.map((course, index) => (
                <div key={index} className="course-item">{course}</div>
              ))}
            </div>
          </div>

          <div className="forum-section">
            <h3>Discussion Forum</h3>
            <div className="forum-comments">
              {forumComments.map((comment, index) => (
                <div key={index} className="comment-item">
                  <strong>{comment.user}</strong>: {comment.text}
                </div>
              ))}
            </div>
            <input
              type="text"
              placeholder="Add a comment"
              value={newComment}
              onChange={(e) => setNewComment(e.target.value)}
            />
            <button onClick={addComment}>Post Comment</button>
          </div>
        </div>
      )}
    </div>
  );
}

export default App;

App.css:
/* General App Styles */
#app {
  font-family: Arial, sans-serif;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background-color: #f0f2f5;
}

/* Login Section */
.login-section {
  width: 300px;
  padding: 20px;
  background-color: #ffffff;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  border-radius: 8px;
  text-align: center;
}

.login-section h2 {
  margin-bottom: 15px;
  color: #333;
}

.login-section input {
  width: 100%;
  padding: 10px;
  margin: 10px 0;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
}

.login-section button {
  width: 100%;
  padding: 10px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

.login-section button:hover {
  background-color: #0056b3;
}

/* Main Section */
.main-section {
  width: 80%;
  max-width: 1000px;
  padding: 20px;
  background-color: #ffffff;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.main-section h2 {
  color: #333;
  text-align: center;
}

/* Course Section */
.course-section {
  padding: 10px;
  border-top: 2px solid #007bff;
}

.course-section h3 {
  color: #007bff;
}

.course-section input {
  width: 70%;
  padding: 8px;
  margin-right: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
}

.course-section button {
  padding: 8px 15px;
  background-color: #28a745;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.course-section button:hover {
  background-color: #218838;
}

.course-list {
  margin-top: 10px;
  max-height: 150px;
  overflow-y: auto;
}

.course-item {
  padding: 8px;
  margin: 5px 0;
  background-color: #e9ecef;
  border-radius: 4px;
}

/* Forum Section */
.forum-section {
  padding: 10px;
  border-top: 2px solid #007bff;
}

.forum-section h3 {
  color: #007bff;
}

.forum-comments {
  max-height: 200px;
  overflow-y: auto;
  margin-bottom: 10px;
  padding: 10px;
  background-color: #f8f9fa;
  border-radius: 4px;
  border: 1px solid #ddd;
}

.comment-item {
  padding: 8px;
  margin: 5px 0;
  background-color: #ffffff;
  border-radius: 4px;
  border-left: 4px solid #007bff;
}

.comment-item strong {
  color: #007bff;
}

.forum-section input {
  width: 70%;
  padding: 8px;
  margin-right: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
}

.forum-section button {
  padding: 8px 15px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.forum-section button:hover {
  background-color: #0056b3;
}

.logout-button {
  align-self: flex-end;
  padding: 8px 15px;
  background-color: #dc3545;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin-bottom: 10px;
}

.logout-button:hover {
  background-color: #c82333;
}